@use "./variables" as *;
@use "sass:map";

// Responsive

@mixin mobile-only {
  @media (max-width: $breakpoint-sm) {
    @content;
  }
}

@mixin tablet-s {
  @media (min-width: $breakpoint-xs) {
    @content;
  }
}

@mixin tablet-up {
  @media (min-width: $breakpoint-sm) {
    @content;
  }
}
@mixin desktop-up {
  @media (min-width: $breakpoint-lg) {
    @content;
  }
}

@mixin icon-size($mobile, $tablet) {
  height: $mobile;
  width: $mobile;

  @include tablet-up {
    height: $tablet;
    width: $tablet;
  }
}

@mixin font-responsive($size) {
  font-size: map.get(map.get($font-sizes, $size), base);

  @include tablet-up {
    font-size: map.get(map.get($font-sizes, $size), md);
  }
}

@mixin padding-responsive($spacingY, $spacingX) {
  padding: map.get(map.get($spacings, $spacingY), base)
    map.get(map.get($spacings, $spacingX), base);

  @include tablet-up {
    padding: map.get(map.get($spacings, $spacingY), md)
      map.get(map.get($spacings, $spacingX), md);
  }
}

// Layout
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@mixin before-line($position: top) {
  position: relative;

  &::before {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(
      to right,
      transparent 0%,
      transparent 15%,
      rgba(0, 0, 0, 0.3) 20%,
      black 30%,
      black 70%,
      rgba(0, 0, 0, 0.3) 80%,
      transparent 85%,
      transparent 100%
    );

    @if $position == top {
      top: 0;
    } @else if $position == bottom {
      bottom: 0;
    } @else {
      @warn "Invalid position `#{$position}` passed to line-before mixin";
    }
  }
}

// Components

@mixin button-base {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  padding: 0;
  border: none;
  background: none;
  border-radius: $border-radius-xs;
  font-family: inherit;
  font-weight: $font-weight-medium;
  text-decoration: none;
  cursor: pointer;
  transition: all 0.2s ease-in-out;

  @include font-responsive(sm);

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

@mixin button-variant($bg-color, $hover-bg-color, $text-color: white) {
  background-color: $bg-color;
  color: $text-color;

  &:hover {
    background-color: $hover-bg-color;
  }
}

@mixin input-base {
  width: 100%;
  border: 1px solid $gray-500;
  border-radius: $border-radius-xs;
  box-shadow: $shadow-sm;
  font-family: inherit;
  transition: border-color 0.2s ease-in-out;
  @include font-responsive(sm);

  & {
    @include padding-responsive(xxs, sm);
  }

  &:focus {
    outline: none;
    border-color: $primary-light;
  }
}

// Animations

@mixin shadow-rolling($duration: 2s) {
  animation: shadowRolling $duration linear infinite;

  @keyframes shadowRolling {
    0% {
      box-shadow: 0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0),
        0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0);
    }
    12% {
      box-shadow: 100px 0 $primary, 0px 0 rgba(255, 255, 255, 0),
        0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0);
    }
    25% {
      box-shadow: 110px 0 $primary, 100px 0 $primary,
        0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0);
    }
    36% {
      box-shadow: 120px 0 $primary, 110px 0 $primary, 100px 0 $primary,
        0px 0 rgba(255, 255, 255, 0);
    }
    50% {
      box-shadow: 130px 0 $primary, 120px 0 $primary, 110px 0 $primary,
        100px 0 $primary;
    }
    62% {
      box-shadow: 200px 0 rgba(255, 255, 255, 0), 130px 0 $primary,
        120px 0 $primary, 110px 0 $primary;
    }
    75% {
      box-shadow: 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0),
        130px 0 $primary, 120px 0 $primary;
    }
    87% {
      box-shadow: 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0),
        200px 0 rgba(255, 255, 255, 0), 130px 0 $primary;
    }
    100% {
      box-shadow: 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0),
        200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0);
    }
  }
}

@mixin anim-loader($duration: 2s) {
  animation: animloader $duration linear infinite;

  @keyframes animloader {
    0% {
      transform: scale(0);
      opacity: 1;
    }
    100% {
      transform: scale(1);
      opacity: 0;
    }
  }
}
